[{"/Users/gabrielcaterson/Documents/Programming/untitled folder/the-hard-problem/src/index.js":"1","/Users/gabrielcaterson/Documents/Programming/untitled folder/the-hard-problem/src/reportWebVitals.js":"2","/Users/gabrielcaterson/Documents/Programming/untitled folder/the-hard-problem/src/App.js":"3","/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/index.js":"4","/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/reportWebVitals.js":"5","/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/App.js":"6","/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/Components/Autoscroll.js":"7","/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/Components/Scroller.js":"8","/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/Components/ReadMore.js":"9","/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/Components/useIntersection.js":"10","/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/Components/AnimatedText.js":"11","/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/three_script.js":"12","/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/Components/MarysRoom.js":"13","/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/Components/EyeZoom.js":"14","/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/Components/LogoScroll.js":"15","/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/Components/Explain.js":"16","/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/Components/NoHorizontalScroll.js":"17","/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/Components/Bat3D.js":"18"},{"size":535,"mtime":1675852887035,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1675852887035,"results":"21","hashOfConfig":"20"},{"size":528,"mtime":1675852887034,"results":"22","hashOfConfig":"20"},{"size":535,"mtime":1675852887035,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1675852887035,"results":"25","hashOfConfig":"24"},{"size":7703,"mtime":1683171358919,"results":"26","hashOfConfig":"24"},{"size":649,"mtime":1677702125454,"results":"27","hashOfConfig":"24"},{"size":197,"mtime":1681272595129,"results":"28","hashOfConfig":"24"},{"size":407,"mtime":1678858563622,"results":"29","hashOfConfig":"24"},{"size":529,"mtime":1679359801942,"results":"30","hashOfConfig":"24"},{"size":1241,"mtime":1680404222648,"results":"31","hashOfConfig":"24"},{"size":1966,"mtime":1680404222674,"results":"32","hashOfConfig":"24"},{"size":1865,"mtime":1680576653208,"results":"33","hashOfConfig":"24"},{"size":1126,"mtime":1681012560999,"results":"34","hashOfConfig":"24"},{"size":1310,"mtime":1682461298015,"results":"35","hashOfConfig":"24"},{"size":2179,"mtime":1682307951628,"results":"36","hashOfConfig":"24"},{"size":217,"mtime":1682566994013,"results":"37","hashOfConfig":"24"},{"size":3806,"mtime":1683171772664,"results":"38","hashOfConfig":"24"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ezbuv8",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"17sug21",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"51"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"51"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gabrielcaterson/Documents/Programming/untitled folder/the-hard-problem/src/index.js",[],[],"/Users/gabrielcaterson/Documents/Programming/untitled folder/the-hard-problem/src/reportWebVitals.js",[],[],"/Users/gabrielcaterson/Documents/Programming/untitled folder/the-hard-problem/src/App.js",[],[],"/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/index.js",[],[],[],"/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/reportWebVitals.js",[],[],"/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/App.js",["99","100","101","102","103"],[],"import React, { useRef, useState } from 'react';\n\nimport logo from './logo.svg';\nimport './App.css';\n//import * as THREE from \"three\";\n//import './css/main.css';\n//import './three_script.js';\n\n\n\n\nimport Autoscroll from './Components/Autoscroll.js';\n//import Scroller from './Components/Scroller.js';\nimport './Components/NoHorizontalScroll.js';\n\nimport { ReadMore } from './Components/ReadMore.js';\nimport AnimatedText from './Components/AnimatedText.js';\nimport LogoScroll from './Components/LogoScroll.js';\nimport Explain from './Components/Explain.js';\n\nimport './Components/EyeZoom.js';\n\nimport { MarysRoom } from './Components/MarysRoom.js';\n\nimport useIntersection from './Components/useIntersection.js';\nimport './Components/Bat3D.js';\n\n\n\n\n\n/*\nimport gsap from \"gsap\";\nimport SplitTextJS from 'split-text-js';\n\nconst titles = gsap.utils.toArray('p');\nconst tl = gsap.timeline();\n\n\ntitles.forEach(title => {\n\tconst splitTitle = new SplitTextJS(title);\n\t\n\ttl\n\t\t.from(splitTitle.chars, {\n\t\t\topacity: 0,\n\t\t\ty: 80,\n\t\t\trotateX: -90,\n\t\t\tstagger: .005\n\t\t}, \"<\")\n\n\t\t.to(splitTitle.chars, {\n\t\t\topacity: 1,\n\t\t\ty: 0,\n\t\t\trotateX: 0,\n\t\t\tstagger: .005\n\t\t}, \"<1\")\n\n});*/\n\n\n\n\n\n\n\n\n\nfunction App() {\n\t/*\n\tconst ref = useRef();\n    //const inViewport = useIntersection(ref, '0px');\n    const inViewport = useIntersection(ref, '-200px');\n\n    if (inViewport) {\n        console.log('in viewport:', ref.current);\n    }\n\n\tconst observer = new IntersectionObserver(entries => {\n\t\tentries.forEach(entry => {\n\t\t  \tconst square = entry.target.querySelector('.wipe-enter');\n\t  \n\t\t\tif (entry.isIntersecting) {\n\t\t\t\tsquare.classList.add('wipe-enter-activator');\n\t\t\t\treturn; // if we added the class, exit the function\n\t\t\t}\n\t  \n\t\t\t// We're not intersecting, so remove the class!\n\t\t\tsquare.classList.remove('wipe-enter-activator');\n\t\t});\n\t});\n\t\n\tobserver.observe(document.querySelector('.crop-36-box'));\n\t*/\n\n\n\n\treturn (\n\t\t<section className=\"App\">\n\n\t\t\t\n\n\n\t\t\t<section className=\"body\">\n\n\t\t\t<LogoScroll />\n\t\t\t<Explain />\n\n\n\t\t\t\t<section className=\"text-box-container text-box-container-bat yellow-background\">\n\n\t\t\t\t\t<section className=\"bat-container\"> \n\t\t\t\t\t\t<section className=\"bat-container-inner\"> \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</section>\n\n\n\t\t\t\t\t<section className=\"text-box-container-inner\n\t\t\t\t\t\t\t\t\t\ttext-box-container-inner-bat\n\t\t\t\t\t\t\t\t\t\tyellow-background\">\n\t\t\t\t\t\t{/*<p className=\"text-box text-box-bat\" >\n\t\t\t\t\t\t\tWhat is it like to be a bat? <br /><br />\n\t\t\t\t\t\t\tWe know roughly what it's like to be other humans because they are very similar to us, but what would it be like to be a bat? We may know that they experience life differently from us, using echolocation, and we can maybe consider analogous experiences, but we can never know what it is like for a bat to be a bat, having lived an entire life solely as a bat. \n\n\n\t\t\t\t\t\t\t<br /><br />\n\t\t\t\t\t\t\tWhat this shows us is that scientific theories are objective, but our experiences are subjective.\n\t\t\t\t\t\t</p>*/}\n\n\t\t\t\t\t\t<AnimatedText text={ \n\t\t\t\t\t\t\t<p className=\"black-text\"> What is it like to be a bat? <br /><br />\n\t\t\t\t\t\t\tWe know roughly what it's like to be other humans because they are very similar to us, but what would it be like to be a bat? We may know that they experience life differently from us, using echolocation, and we can maybe consider analogous experiences, but we can never know what it is like for a bat to be a bat, having lived an entire life solely as a bat. \n\n\n\t\t\t\t\t\t\t<br /><br />\n\t\t\t\t\t\t\tWhat this shows us is that scientific theories are objective, but our experiences are subjective. </p> }/>\n\n\t\t\t\t\t\t<section className=\"reading-section\">\n\t\t\t\t\t\t\t<ReadMore color=\"black-background yellow-text\" link=\"https://warwick.ac.uk/fac/cross_fac/iatl/study/ugmodules/humananimalstudies/lectures/32/nagel_bat.pdf\" text=\"Read paper\"/>\n\t\t\t\t\t\t</section>\n\n\t\t\t\t\t</section>\n\t\t\t\t</section>\n\n\n\n\t\t\t\t<section className=\"text-box-container \n\t\t\t\t\t\t\t\t\ttext-box-container-mary\n\t\t\t\t\t\t\t\t\t\">\n\t\t\t\t\t<section className=\"text-box-container-inner text-box-container-inner-mary black-background\">\n\t\t\t\t\t\t{/*<p className=\"text-box text-box-1\" >\n\t\t\t\t\t\t\tMary's room. <br /><br />\n\n\t\t\t\t\t\t\tImagine a color scientist named Mary. She has lived her entire life in a black and white room, and can only investigate the world using a black and white television monitor. That being said, she knows everything there is to know about the physical descriptions of color, and how the human body interacts with it. Will Mary learn anything when she sees color for the first time?\n\t\t\t\t\t\t</p>*/}\n\n\t\t\t\t\t\t<AnimatedText text={ \n\t\t\t\t\t\t\t<p> Mary's room. <br /><br />\n\n\t\t\t\t\t\t\tImagine a color scientist named Mary. She has lived her entire life in a black and white room, and can only investigate the world using a black and white television monitor. That being said, she knows everything there is to know about the physical descriptions of color, and how the human body interacts with it. Will Mary learn anything when she sees color for the first time? </p> }/>\n\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t<section className=\"reading-section\">\n\t\t\t\t\t\t\t<ReadMore color=\"white-background black-text\" link=\"\" text=\"Read paper\"/>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t\n\t\t\t\t\t<section className=\"mary-container\"> \n\t\t\t\t\t\t{/*<section className=\"mary-container-inner\"> \n\t\t\t\t\t\t\t<section className=\"mary\"> \n\n\t\t\t\t\t\t\t</section>\n\n\n\t\t\t\t\t\t</section>*/}\n\t\t\t\t\t\t<MarysRoom />\n\t\t\t\t\t\t<section className=\"move-icon-container\">\n\t\t\t\t\t\t\t<section className=\"move-icon\"></section>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\n\n\t\t\t\t\t</section>\n\t\t\t\t</section>\n\n\n\n\t\t\t\t<section className=\"text-box-container text-box-container-zombie blue-background\">\n\n\t\t\t\t\t<section className=\"zombie-container\"> \n\t\t\t\t\t\t<section className=\"zombie-container-inner\"> \n\t\t\t\t\t\t\t<section className=\"overview zombie\"> \n\n\t\t\t\t\t\t\t</section>\n\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</section>\n\n\n\n\t\t\t\t\t<section className=\"text-box-container-inner\n\t\t\t\t\t\t\t\t\t\ttext-box-container-inner-zombie\n\t\t\t\t\t\t\t\t\t\tgreen-background\">\n\t\t\t\t\t\t{/*<p className=\"text-box text-box-1\" >\n\t\t\t\t\t\t\tPhilosophical zombies. <br /><br />\n\t\t\t\t\t\t\tImagine a person physically identical to a normal person, but who doesn't have a conscious experience. We'll call this person a philosophical zombie. There is nothing it is like to be a zombie. Still, they will behave the same way a normal person would. For instance, if someone poked a zombie with a sharp object, they would cry out as if they were in pain, but they wouldn't feel anything. Some zombies might even read websites about consciousness! <br /><br />\n\n\t\t\t\t\t\t\tIf it's at least possible for there to be a world where this kind of person exists, then it must be the case that consciousness exists, and isn't physical.\n\t\t\t\t\t\t</p>*/}\n\n\t\t\t\t\t\t<AnimatedText text={ \n\t\t\t\t\t\t\t<p> Philosophical zombies. <br /><br />\n\t\t\t\t\t\t\tImagine a person physically identical to a normal person, but who doesn't have a conscious experience. We'll call this person a philosophical zombie. There is nothing it is like to be a philosophical zombie. Still, they will behave the same way a normal person would. For instance, if someone poked a zombie with a sharp object, they would cry out as if they were in pain, but they wouldn't feel anything. Some zombies might even read websites about consciousness! <br /><br />\n\n\t\t\t\t\t\t\tIf it's at least possible for there to be a world where this kind of person exists, then it must be the case that consciousness exists, and isn't physical. </p> }/>\n\n\t\t\t\t\t\t<section className=\"reading-section\">\n\t\t\t\t\t\t\t<ReadMore color=\"blue-background white-text\" link=\"https://warwick.ac.uk/fac/cross_fac/iatl/study/ugmodules/humananimalstudies/lectures/32/nagel_bat.pdf\" text=\"Read paper\"/>\n\t\t\t\t\t\t</section>\n\n\t\t\t\t\t</section>\n\t\t\t\t</section>\n\n\n\t\t\t\t\n\t\t\t</section>\n\n\n\t\t\t\n\n\t\t</section>\n\t);\n}\n\nexport default App;\n","/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/Components/Autoscroll.js",[],[],"/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/Components/Scroller.js",[],[],"/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/Components/ReadMore.js",["104"],[],"import React, { Component, useRef } from \"react\";\n\n\n\nexport class ReadMore extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n        }\n\t}\n    \n\trender() {\n\n        return (\n\t\t\t<a className={ \"read-more \" + this.props.color } href={ this.props.link } target=\"_blank\" rel=\"noopener noreferrer\" >\n               { this.props.text }\n            </a>\n\t\t);\n\t}\n}\n\nexport default ReadMore;","/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/Components/useIntersection.js",["105","106"],[],"import { useState, useEffect } from 'react'\n\nconst useIntersection = (element, rootMargin) => {\n    const [isVisible, setState] = useState(false);\n\n    useEffect(() => {\n        const observer = new IntersectionObserver(\n            ([entry]) => {\n                setState(entry.isIntersecting);\n            }, { rootMargin }\n        );\n\n        element.current && observer.observe(element.current);\n\n        return () => observer.unobserve(element.current);\n    }, []);\n\n    return isVisible;\n};\n\nexport default useIntersection;","/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/Components/AnimatedText.js",["107"],[],"import React, { Component } from 'react';\nimport { useInView } from 'react-intersection-observer';\n/*\nimport gsap from \"gsap\";\nimport SplitTextJS from 'split-text-js';\n\n\nfunction animateText(){\n    const titles = gsap.utils.toArray('p');\n    const tl = gsap.timeline();\n\n\n    titles.forEach(title => {\n        const splitTitle = new SplitTextJS(title);\n        \n        tl\n            .from(splitTitle.chars, {\n                opacity: 0,\n                y: 80,\n                rotateX: -90,\n                stagger: .005\n            }, \"<\")\n\n            .to(splitTitle.chars, {\n                opacity: 1,\n                y: 0,\n                rotateX: 0,\n                stagger: .005\n            }, \"<1\")\n\n    });\n}*/\n\n\nconst AnimatedText = (props) => {\n    \n    const { ref, inView } = useInView({\n        triggerOnce: false,\n        rootMargin: '-100px 0px',\n    });\n\n    return (\n        <section\n            ref={ref}\n            className={`text-box-container-inner-2 text-animate-in ${inView ? 'text-animate-in-onscreen' : 'text-animate-in-offscreen'}`} >\n\n            <section className=\"text-box text-box-overview\" >\n                { props.text }\n            </section>\n        </section>\n    );\n};\n\nexport default AnimatedText;\n","/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/three_script.js",["108","109"],[],"/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/Components/MarysRoom.js",["110","111"],[],"import React, { Component, useRef, useState } from 'react';\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber'; \nimport { OrbitControls, useTexture } from '@react-three/drei';\nimport { TextureLoader } from 'three/src/loaders/TextureLoader';\nimport Panorama from '../marys_room_3.jpeg'; //Made using skybox.blockadelabs.com \n\nfunction Room(props) {\n    const texture = useLoader(TextureLoader, Panorama );\n    texture.flipY = false;\n\n\t// This reference gives us direct access to the THREE.Mesh object.\n\tconst ref = useRef()\n\t// Hold state for hovered and clicked events.\n\tconst [hovered, hover] = useState(false)\n\tconst [clicked, click] = useState(false)\n\t// Subscribe this component to the render-loop, rotate the mesh every frame.\n    const rotationSpeed = clicked ? 0.0 : 0.03;\n\tuseFrame((state, delta) => (ref.current.rotation.y += delta * rotationSpeed))\n\t// Return the view, these are regular Threejs elements expressed in JSX.\n\n\treturn (\n\t  <mesh\n\t\t{...props}\n\t\tref={ref}\n\t\t//onClick={(event) => click(!clicked)}\n        onClick={(event) => click(true)}\n\n\t\tonPointerOver={(event) => hover(false)}\n\t\tonPointerOut={(event) => hover(false)}>\n        position={[0, 0, 0.1]}\n        rotation={[-1,1,1]}\n        <sphereGeometry args={[-500, 60, 40]} />\n\n\n        <perspectiveCamera args={[75, window.innerWidth / window.innerHeight, 1, 1000]} />\n        <meshBasicMaterial map={texture} />\n\t  </mesh>\n\t)\n}\n\n\nexport class MarysRoom extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n        }\n\t}\n\n\trender() {\n\n        return (\n\t\t\t<section className=\"marys-room\"> \n                <Canvas sRGB={true} linear flat>\n\n                    <Room position={[0, 0, 0]} />\n\n                    <OrbitControls enableZoom={false} rotateSpeed={-0.2} />\n\n                </Canvas>\n            </section>\n\t\t);\n\t}\n}\n\nexport default MarysRoom;","/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/Components/EyeZoom.js",[],[],"/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/Components/LogoScroll.js",["112","113","114"],[],"/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/Components/Explain.js",["115","116"],[],"/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/Components/NoHorizontalScroll.js",[],[],"/Users/gabrielcaterson/Documents/Programming/The Hard Problem/the-hard-problem/src/Components/Bat3D.js",[],[],{"ruleId":"117","severity":1,"message":"118","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":23},{"ruleId":"117","severity":1,"message":"121","line":1,"column":25,"nodeType":"119","messageId":"120","endLine":1,"endColumn":33},{"ruleId":"117","severity":1,"message":"122","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":12},{"ruleId":"117","severity":1,"message":"123","line":12,"column":8,"nodeType":"119","messageId":"120","endLine":12,"endColumn":18},{"ruleId":"117","severity":1,"message":"124","line":25,"column":8,"nodeType":"119","messageId":"120","endLine":25,"endColumn":23},{"ruleId":"117","severity":1,"message":"118","line":1,"column":28,"nodeType":"119","messageId":"120","endLine":1,"endColumn":34},{"ruleId":"125","severity":1,"message":"126","line":15,"column":49,"nodeType":"119","endLine":15,"endColumn":56},{"ruleId":"125","severity":1,"message":"127","line":16,"column":8,"nodeType":"128","endLine":16,"endColumn":10,"suggestions":"129"},{"ruleId":"117","severity":1,"message":"130","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"117","severity":1,"message":"131","line":5,"column":10,"nodeType":"119","messageId":"120","endLine":5,"endColumn":16},{"ruleId":"117","severity":1,"message":"132","line":5,"column":18,"nodeType":"119","messageId":"120","endLine":5,"endColumn":26},{"ruleId":"117","severity":1,"message":"133","line":3,"column":25,"nodeType":"119","messageId":"120","endLine":3,"endColumn":35},{"ruleId":"117","severity":1,"message":"134","line":14,"column":9,"nodeType":"119","messageId":"120","endLine":14,"endColumn":16},{"ruleId":"117","severity":1,"message":"130","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"135","severity":1,"message":"136","line":21,"column":72,"nodeType":"137","messageId":"138","endLine":21,"endColumn":73},{"ruleId":"135","severity":1,"message":"136","line":29,"column":48,"nodeType":"137","messageId":"138","endLine":29,"endColumn":49},{"ruleId":"117","severity":1,"message":"130","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"135","severity":1,"message":"136","line":16,"column":92,"nodeType":"137","messageId":"138","endLine":16,"endColumn":93},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'logo' is defined but never used.","'Autoscroll' is defined but never used.","'useIntersection' is defined but never used.","react-hooks/exhaustive-deps","The ref value 'element.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'element.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has missing dependencies: 'element' and 'rootMargin'. Either include them or remove the dependency array.","ArrayExpression",["139"],"'Component' is defined but never used.","'Canvas' is defined but never used.","'useFrame' is defined but never used.","'useTexture' is defined but never used.","'hovered' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",{"desc":"140","fix":"141"},"Update the dependencies array to be: [element, rootMargin]",{"range":"142","text":"143"},[466,468],"[element, rootMargin]"]